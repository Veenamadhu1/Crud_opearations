{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const Ref = useRef(null);\n  const [timer, setTimer] = useState('00:00:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 * 60 * 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n  const clearTimer = e => {\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  };\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Codedamn App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n};\n_s(App, \"HPeaHJ9UVwlp0EkypzcTPI/d1Lw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/React/myapp/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\nconst App = () => {\nconst Ref = useRef(null);\nconst [timer, setTimer] = useState('00:00:00');\nconst getTimeRemaining = (e) => {\nconst total = Date.parse(e) - Date.parse(new Date());\nconst seconds = Math.floor((total / 1000) % 60);\nconst minutes = Math.floor((total / 1000 / 60) % 60);\nconst hours = Math.floor((total / 1000 * 60 * 60) % 24);\nreturn {\ntotal, hours, minutes, seconds\n};\n}\nconst startTimer = (e) => {\nlet { total, hours, minutes, seconds }\n= getTimeRemaining(e);\nif (total >= 0) {\nsetTimer(\n(hours > 9 ? hours : '0' + hours) + ':' +\n(minutes > 9 ? minutes : '0' + minutes) + ':'\n+ (seconds > 9 ? seconds : '0' + seconds)\n)\n}\n}\nconst clearTimer = (e) => {\nif (Ref.current) clearInterval(Ref.current);\nconst id = setInterval(() => {\nstartTimer(e);\n}, 1000)\nRef.current = id;\n}\nconst getDeadTime = () => {\nlet deadline = new Date();\ndeadline.setSeconds(deadline.getSeconds() + 10);\nreturn deadline;\n}\nuseEffect(() => {\nclearTimer(getDeadTime());\n}, []);\nconst onClickReset = () => {\nclearTimer(getDeadTime());\n}\nreturn (\n<div className=\"Codedamn App\">\n<h2>{timer}</h2>\n<button onClick={onClickReset}>Reset</button>\n</div>\n)\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}