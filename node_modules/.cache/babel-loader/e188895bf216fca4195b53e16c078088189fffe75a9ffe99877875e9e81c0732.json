{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\myapp\\\\src\\\\App.js\";\nimport { ElementsConsumer, PaymentElement } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CheckoutForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.handleSubmit = async event => {\n      // We don't want to let default form submission happen here,\n      // which would refresh the page.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n      if (!stripe || !elements) {\n        // Stripe.js has not yet loaded.\n        // Make sure to disable form submission until Stripe.js has loaded.\n        return;\n      }\n      const result = await stripe.confirmPayment({\n        //`Elements` instance that was used to create the Payment Element\n        elements,\n        confirmParams: {\n          return_url: \"https://example.com/order/123/complete\"\n        }\n      });\n      if (result.error) {\n        // Show error to your customer (for example, payment details incomplete)\n        console.log(result.error.message);\n      } else {\n        // Your customer will be redirected to your `return_url`. For some payment\n        // methods like iDEAL, your customer will be redirected to an intermediate\n        // site first to authorize the payment, then redirected to the `return_url`.\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(PaymentElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !this.props.stripe,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default function InjectedCheckoutForm() {\n  return /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n    children: _ref => {\n      let {\n        stripe,\n        elements\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(CheckoutForm, {\n        stripe: stripe,\n        elements: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = InjectedCheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"InjectedCheckoutForm\");","map":{"version":3,"names":["ElementsConsumer","PaymentElement","jsxDEV","_jsxDEV","CheckoutForm","React","Component","constructor","arguments","handleSubmit","event","preventDefault","stripe","elements","props","result","confirmPayment","confirmParams","return_url","error","console","log","message","render","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","InjectedCheckoutForm","_ref","_c","$RefreshReg$"],"sources":["D:/React/myapp/src/App.js"],"sourcesContent":["import {ElementsConsumer, PaymentElement} from '@stripe/react-stripe-js';\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = async (event) => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    const {stripe, elements} = this.props;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.confirmPayment({\n      //`Elements` instance that was used to create the Payment Element\n      elements,\n      confirmParams: {\n        return_url: \"https://example.com/order/123/complete\",\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (for example, payment details incomplete)\n      console.log(result.error.message);\n    } else {\n      // Your customer will be redirected to your `return_url`. For some payment\n      // methods like iDEAL, your customer will be redirected to an intermediate\n      // site first to authorize the payment, then redirected to the `return_url`.\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <PaymentElement />\n        <button disabled={!this.props.stripe}>Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({stripe, elements}) => (\n        <CheckoutForm stripe={stripe} elements={elements} />\n      )}\n    </ElementsConsumer>\n  )\n}"],"mappings":";AAAA,SAAQA,gBAAgB,EAAEC,cAAc,QAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,YAAY,SAASC,KAAK,CAACC,SAAS,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KACzCC,YAAY,GAAG,MAAOC,KAAK,IAAK;MAC9B;MACA;MACAA,KAAK,CAACC,cAAc,EAAE;MAEtB,MAAM;QAACC,MAAM;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAErC,IAAI,CAACF,MAAM,IAAI,CAACC,QAAQ,EAAE;QACxB;QACA;QACA;MACF;MAEA,MAAME,MAAM,GAAG,MAAMH,MAAM,CAACI,cAAc,CAAC;QACzC;QACAH,QAAQ;QACRI,aAAa,EAAE;UACbC,UAAU,EAAE;QACd;MACF,CAAC,CAAC;MAEF,IAAIH,MAAM,CAACI,KAAK,EAAE;QAChB;QACAC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACI,KAAK,CAACG,OAAO,CAAC;MACnC,CAAC,MAAM;QACL;QACA;QACA;MAAA;IAEJ,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA;MAAMqB,QAAQ,EAAE,IAAI,CAACf,YAAa;MAAAgB,QAAA,gBAChCtB,OAAA,CAACF,cAAc;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClB1B,OAAA;QAAQ2B,QAAQ,EAAE,CAAC,IAAI,CAAChB,KAAK,CAACF,MAAO;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAEX;AACF;AAEA,eAAe,SAASE,oBAAoBA,CAAA,EAAG;EAC7C,oBACE5B,OAAA,CAACH,gBAAgB;IAAAyB,QAAA,EACdO,IAAA;MAAA,IAAC;QAACpB,MAAM;QAAEC;MAAQ,CAAC,GAAAmB,IAAA;MAAA,oBAClB7B,OAAA,CAACC,YAAY;QAACQ,MAAM,EAAEA,MAAO;QAACC,QAAQ,EAAEA;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;EACrD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACgB;AAEvB;AAACI,EAAA,GARuBF,oBAAoB;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}